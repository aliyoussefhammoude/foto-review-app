[{"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\index.js":"1","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\App.js":"2","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Navigation.js":"3","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Login.js":"4","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\NotFound.js":"5","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\ForgotPassword.js":"6","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Signup.js":"7","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\Album.js":"8","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\Albums.js":"9","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\firebase\\firebase.js":"10","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useAlbums.js":"11","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useAlbum.js":"12","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useDeleteImage.js":"13","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useUploadImage.js":"14","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\MustLogIn.js":"15","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CreateAlbum.js":"16","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CheckCustomer.js":"17","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImageGrid.js":"18","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImageUploader.js":"19","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CheckCustomerImages.js":"20","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\AlbumsGrid.js":"21","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImagesReviewed.js":"22","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\contexts\\RouteAuth.js":"23","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useImageChecked.js":"24"},{"size":235,"mtime":1610644818802,"results":"25","hashOfConfig":"26"},{"size":1936,"mtime":1610654782124,"results":"27","hashOfConfig":"26"},{"size":730,"mtime":1610657542969,"results":"28","hashOfConfig":"26"},{"size":1983,"mtime":1610657427471,"results":"29","hashOfConfig":"26"},{"size":275,"mtime":1610657636031,"results":"30","hashOfConfig":"26"},{"size":2525,"mtime":1610657221754,"results":"31","hashOfConfig":"26"},{"size":2116,"mtime":1610657921081,"results":"32","hashOfConfig":"26"},{"size":2323,"mtime":1610655525478,"results":"33","hashOfConfig":"26"},{"size":541,"mtime":1610654553811,"results":"34","hashOfConfig":"26"},{"size":651,"mtime":1610657966780,"results":"35","hashOfConfig":"26"},{"size":723,"mtime":1610658130199,"results":"36","hashOfConfig":"26"},{"size":490,"mtime":1610658120626,"results":"37","hashOfConfig":"26"},{"size":869,"mtime":1610658183150,"results":"38","hashOfConfig":"26"},{"size":2235,"mtime":1610658306110,"results":"39","hashOfConfig":"26"},{"size":340,"mtime":1610654558791,"results":"40","hashOfConfig":"26"},{"size":1205,"mtime":1610656571911,"results":"41","hashOfConfig":"26"},{"size":483,"mtime":1610655734550,"results":"42","hashOfConfig":"26"},{"size":2933,"mtime":1610657073509,"results":"43","hashOfConfig":"26"},{"size":1768,"mtime":1610657153172,"results":"44","hashOfConfig":"26"},{"size":3713,"mtime":1610660347605,"results":"45","hashOfConfig":"26"},{"size":338,"mtime":1610655651665,"results":"46","hashOfConfig":"26"},{"size":1206,"mtime":1610659292772,"results":"47","hashOfConfig":"26"},{"size":1558,"mtime":1610654532696,"results":"48","hashOfConfig":"26"},{"size":873,"mtime":1610658306998,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1wsq3md",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\index.js",[],["106","107"],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\App.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Navigation.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Login.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\NotFound.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\ForgotPassword.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Signup.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\Album.js",["108"],"import React, { useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport ImageGrid from './ImageGrid'\nimport useAlbum from '../../hooks/useAlbum'\nimport ImageUploader from './ImageUploader'\nimport { useAuth } from '../../contexts/RouteAuth'\nimport {db} from '../../firebase/firebase'\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/react\"\n\n\nconst Album = () => {\n\tconst [constumer, setCostumer] = useState(null)\n\tconst [albumTitleChange, setalbumTitleChange] = useState(null)\n\tconst [createTitle, setcreateTitle] = useState(null)\n\tconst [, setErrorMsg] = useState(false)\n\tconst { albumId } = useParams()\n\tconst { album } = useAlbum(albumId)\n\tconst { currentUser } = useAuth()\n\n\tconst handleCostumerLink = () => {\n        setCostumer(`${window.location.href}/*`);\n\t};\n\n\tconst handleAlbumEditChange = () =>{\n\t\tsetalbumTitleChange(true)\n\t}\n\n\tconst handleAlbumTitleChange = (e) => {\n\t\tsetcreateTitle(e.target.value)\n\t}\n\n\tconst EditedTitel = async (e) =>{\n\t\ttry {\n\t\t\tawait db.collection('albums').doc(album.id).update({\n\t\t\t\ttitle: createTitle,\n\t\t\t});\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"try again.\")\n\t\t}\n\t\tsetalbumTitleChange(false)\n\t}\n\t\n\n\treturn (\n\t\t<>\n\t\t\t{album && currentUser &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talbumTitleChange  \n\t\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<FormControl onChange={handleAlbumTitleChange} id=\"first-name\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"album-title\">\n\t\t\t\t\t\t\t\t\t\t\t<FormLabel>New Album Name</FormLabel>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t<Button onClick={EditedTitel}>Save</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"album-title\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"mb-3\">{album && album.title}</h2>\n\t\t\t\t\t\t\t\t\t<Button onClick={handleAlbumEditChange} className=\"editor-icon\" >Edit album name</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Link to=\"/albums\">back</Link>\n\t\t\t\t\t\t<ImageUploader albumId={albumId} />\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<ImageGrid images={album.images} />\n\n\t\t\t\t\t\t{album.images.length > 0 &&\n\t\t\t\t\t\t\t<div className=\"button-wrapper\">\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\tclassName=\"btn button__secondary\"\n\t\t\t\t\t\t\t\t\tonClick={handleCostumerLink}\n\t\t\t\t\t\t\t\t\t>Customer Link\n\t\t\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}{constumer && <p>{constumer}</p>}\t\t\n\t\t\t\t\t</>\n\t\t\t}\t\t\n\t\t</>\n\t)\n}\n\nexport default Album\n","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\Albums.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\firebase\\firebase.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useAlbums.js",["109"],"import { useEffect, useState } from 'react'\nimport { db } from '../firebase/firebase'\nimport { useAuth } from '../contexts/RouteAuth'\n\nconst useAlbums = () => {\n\n\tconst [albums, setAlbums] = useState([])\n\tconst [loading, setLoading] = useState(true)\n\n\tconst { currentUser } = useAuth()\n\n\tuseEffect(() => {\n\t\tconst unSigned = db.collection('albums')\n\t\t\t.where('owner', '==', currentUser.uid).onSnapshot(snapshot => {\n\t\t\t\tsetLoading(true)\n\t\t\t\tconst renderSnapAlbums = []\n\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\trenderSnapAlbums.push({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\tsetAlbums(renderSnapAlbums)\n\t\t\tsetLoading(false)\n\t\t})\n\n\t\treturn unSigned\n\t}, [])\n\n\treturn { albums, loading }\n}\n\nexport default useAlbums","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useAlbum.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useDeleteImage.js",["110"],"import { useState, useEffect } from 'react';\nimport { db } from '../firebase/firebase';\nimport { useParams } from 'react-router-dom'\n\nconst useDeleteImage = image => {\n\tconst [isSuccess, setIsSuccess] = useState(false)\n\tconst [error, setError] = useState(false)\n\n\tconst {albumId} = useParams()\n\n\tuseEffect(() => {\n\n\t\tif (!image) {\n\t\t\treturn;\n\t\t}\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet getImages = await db.collection('albums').doc(albumId).get()\n\t\t\t\tconst currentImages = getImages.data().images\n\n\t\t\t\tcurrentImages.forEach((img, index) => {\n\t\t\t\t\tif (img.url === image.url) {\n\t\t\t\t\t\tcurrentImages.splice(index, 1) \t\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tawait db.collection('albums').doc(albumId).update({\n\t\t\t\t\timages: currentImages,\n\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true)\n\t\t\t\tsetIsSuccess(false)\n\t\t\t}\n\t\t})();\n\t}, [image]);\n\n\treturn {error, isSuccess}\n}\n\nexport default useDeleteImage","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useUploadImage.js",[],["111","112"],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\MustLogIn.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CreateAlbum.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CheckCustomer.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImageGrid.js",["113"],"import React, { useState, useEffect } from 'react'\nimport useDeleteImage from '../../hooks/useDeleteImage'\nimport useUploadImage from '../../hooks/useUploadImage';\nimport { useNavigate } from 'react-router-dom'\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport { SRLWrapper } from 'simple-react-lightbox'\nimport { useAuth } from '../../contexts/RouteAuth'\n\nconst ImageGrid = ({ images }) => {\n\n\tconst [newImageArray, setNewImageArray] = useState(null)\n\tconst [, setErrorText] = useState(false)\n\n\tconst [newPictures, setnewPictures] = useState([])\n\tconst [imageCheck, setimageCheck] = useState({})\n\tconst [deleteImage, setDeleteImage] = useState(null);\n\t\n\tconst navigate = useNavigate()\n\tconst { error, isSuccess } = useUploadImage(newImageArray);\n\n\tconst { currentUser } = useAuth()\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetErrorText(\"Unexpected error, could not upload and create new album.\")\n\t\t} else if (isSuccess) {\n\t\t\tsetNewImageArray(null);\n\t\t\tnavigate('/albums')\n\t\t} \n\t}, [error, isSuccess]);\n\t\t\n\tconst handleDeleteImage = (image) => {\n\t\tsetDeleteImage(image);\n\t}\n\tuseDeleteImage(deleteImage);\n\n\tconst creatAlbum = (checkedImages) => {\n\t\tlet imagesToSave = []\n\n\t\timages.forEach(imgItem => {\n\t\t\tif (checkedImages.includes(imgItem.url)) {\n\t\t\t\timagesToSave.push(imgItem)\n\t\t\t}\n\t\t})\n\n\t\tsetNewImageArray(imagesToSave)\n\t}\n\n\tconst handleimageCheck = (e) => {\n\t\t\n\t\tsetimageCheck({...imageCheck, [e.target.name] : e.target.checked })\n\t\t\n\t\t\tif (newPictures.includes(e.target.name)) {\n\t\t\t\tfor (let i = 0; i < newPictures.length; i++){     \n\t\t\t\t\tnewPictures[i] === e.target.name && newPictures.splice(i, 1) \t\t\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewPictures.push(e.target.name)\n\t\t\t}\n\t\tsetnewPictures(newPictures);\n\t}\n\n\treturn (\n\t\t<SRLWrapper>\n\t\t\t<Row className=\"my-3\">\n\t\t\t\t{images.map(image => (\n\t\t\t\t\t<Col sm={6} md={4} lg={3} key={image.id}>\n\t\t\t\t\t\t<Card className=\"mb-3 text-center\">\n\t\t\t\t\t\t\t<a href={image.url} title=\"Lightbox mode\" data-attribute=\"SRL\">\n\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={image.url} title={image.name} />\n\t\t\t\t\t\t\t\t{currentUser &&\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4\"\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tname={image.url}\n\t\t\t\t\t\t\t\t\t\tchecked={imageCheck[image.url]}\n\t\t\t\t\t\t\t\t\t\tonChange={handleimageCheck}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Text className=\"text-center small\">\n\t\t\t\t\t\t\t\t\t{image.name} ({Math.round(image.size/1024)} kb)\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timage.owner === currentUser.uid && (\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => {handleDeleteImage(image)}}>\n\t\t\t\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t{currentUser && newPictures && newPictures.length > 0 &&\t\t\n\t\t\t\t\t\t<Button onClick={() => creatAlbum(newPictures)}>\n\t\t\t\t\t\t\tCreate an album with the images you have checked above\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t</Col>\t\t\t\t\n\t\t\t</Row>\n\t\t</SRLWrapper>\n\t)\n}\n\nexport default ImageGrid\n","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImageUploader.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\CheckCustomerImages.js",["114"],"import React, { useState, useEffect } from 'react'\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport useImageChecked from '../../hooks/useImageChecked';\nimport ImagesReviewed from './ImagesReviewed'\nimport { SRLWrapper } from 'simple-react-lightbox'\n\nconst CheckCustomerImages = ({ images, owner, title }) => {\n\n\tconst [ArrayImg, setArrayImg] = useState(null)\n\tconst [errorText, setErrorText] = useState(false)\n\tconst [CheckedReview, setCheckedReview] = useState(false)\n\n\tconst [ImagesPositive, setImagesPositive] = useState([])\n\tconst [ImagesNegative, setImagesNegative] = useState([])\n\n\tconst { selectedError, selectedSuccess } = useImageChecked(ArrayImg, owner, title);\n\n\tconst [ImagesNegativeChecked, setImagesNegativeChecked] = useState({})\n\tconst [ImagesPositiveChecked, setImagesPositiveChecked] = useState({})\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\tif (selectedError) {\n\t\t\tsetErrorText(\"didnt create new album\")\n\t\t} else if (selectedSuccess) {\n\t\t\tsetArrayImg(null);\n\t\t\tnavigate('/')\n\t\t} \n\t}, [selectedError, selectedSuccess]);\n\n\n\tconst handleReview = () => {\n\t\tsetCheckedReview(!CheckedReview)\n\t}\n\t\t\n\tconst handleNegativeImages = (e) => {\n\t\t\n\t\tsetImagesNegativeChecked({...ImagesNegativeChecked, [e.target.name] : e.target.checked })\n\t\n\t\tif (ImagesNegative.includes(e.target.name)) {\n\t\t\tfor (let i = 0; i < ImagesNegative.length; i++){     \n\t\t\t\tImagesNegative[i] === e.target.name && ImagesNegative.splice(i, 1) \t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tImagesNegative.push(e.target.name)\n\t\t}\n\t\tsetImagesNegative(ImagesNegative);\n\t}\n\n\tconst creatAlbum = (checkedImages) => {\n\t\tlet imagesToSave = []\n\n\t\timages.forEach(imgItem => {\n\t\t\tif (checkedImages.includes(imgItem.url)) {\n\t\t\t\timagesToSave.push(imgItem)\n\t\t\t}\n\t\t})\n\n\t\tsetArrayImg(imagesToSave)\n\t}\n\n\n\tconst handlePositiveImageCheck = (e) => {\n\t\n\t\tsetImagesPositiveChecked({...ImagesPositiveChecked, [e.target.name] : e.target.checked })\n\t\n\t\tif (ImagesPositive.includes(e.target.name)) {\n\t\t\tfor (let i = 0; i < ImagesPositive.length; i++){     \n\t\t\t\tImagesPositive[i] === e.target.name && ImagesPositive.splice(i, 1) \t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tImagesPositive.push(e.target.name)\n\t\t}\n\t\tsetImagesPositive(ImagesPositive);\n\t}\n\n\treturn (\n\t\t<SRLWrapper>\n\t\t<p>{errorText}</p>\n\t\t{\n\t\t\t!CheckedReview\n\t\t\t ? (\n\t\t\t\t<>\n\t\t\t\t\t<Row className=\"my-3\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\timages.map(image => (\n\t\t\t\t\t\t\t<Col sm={6} md={4} lg={3} key={image.id}>\n\t\t\t\t\t\t\t\t<Card className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<a href={image.url} title=\"View image in lightbox\" data-attribute=\"SRL\">\n\t\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={image.url} title={image.name} />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Text className=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t{image.name} ({Math.round(image.size/1024)} kb)\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<label>👍\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={image.url}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={ImagesPositiveChecked[image.url]}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handlePositiveImageCheck}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t<label>👎</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={image.url}\n\t\t\t\t\t\t\t\t\t\t\tchecked={ImagesNegativeChecked[image.url]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleNegativeImages}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t\t\n\t\t\t\t\t\t{images.length <= ImagesPositive.length + ImagesNegative.length  &&\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button onClick={handleReview}>{console.log(images)}\n\t\t\t\t\t\t\t\tReview\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<ImagesReviewed\n\t\t\t\tlikedImages={ImagesPositive} create={creatAlbum} goBack={handleReview} dislikedImages={ImagesNegative}/>\n\t\t\t)\n\t\t}\n\t\t\t\n\t\t</SRLWrapper>\n\t)\n}\n\nexport default CheckCustomerImages\n","C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\AlbumsGrid.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\components\\Albums\\ImagesReviewed.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\contexts\\RouteAuth.js",[],"C:\\Users\\aliha\\Desktop\\foto-review-app\\src\\hooks\\useImageChecked.js",["115"],"import { useEffect, useState } from 'react'\nimport { db } from '../firebase/firebase'\n\nconst useImageChecked = (images, owner, title) => {\n\n    const [selectedError, setSelectedError] = useState(false)\n    const [selectedSuccess, setSelectedSuccess] = useState(false)\n\n    useEffect(() => {\n        if (!images) {\n\t\t\tsetSelectedError(null);\n\t\t\tsetSelectedSuccess(false);\n\n\t\t\treturn;\n        }\n        \n        (async () => {\n\t\t\tconst customersReview = `Costumer's review on:  ${title}` \n\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tawait db.collection('albums').add({\n\t\t\t\t\towner,\n\t\t\t\t\ttitle: customersReview,\n\t\t\t\t\timages: images,\n\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\t\t\tsetSelectedError(false)\n\t\t\t\tsetSelectedSuccess(true)\n\n\t\t\t} catch (error) {\n\n\t\t\t\tsetSelectedError(true)\n\t\t\t\tsetSelectedSuccess(false)\n\t\t\t}\n\t\t})();\t\t\n    }, [images])\n    \n    return { selectedError, selectedSuccess }\n}\n\nexport default useImageChecked\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":16,"column":11,"nodeType":"122","messageId":"123","endLine":16,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":30,"column":5,"nodeType":"126","endLine":30,"endColumn":7,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":37,"column":5,"nodeType":"126","endLine":37,"endColumn":12,"suggestions":"129"},{"ruleId":"116","replacedBy":"130"},{"ruleId":"118","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":30,"column":5,"nodeType":"126","endLine":30,"endColumn":23,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"132","line":30,"column":5,"nodeType":"126","endLine":30,"endColumn":37,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"135","line":37,"column":8,"nodeType":"126","endLine":37,"endColumn":16,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'setErrorMsg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'albumId'. Either include it or remove the dependency array.",["140"],["137"],["138"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["141"],["142"],"React Hook useEffect has missing dependencies: 'owner' and 'title'. Either include them or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [currentUser.uid]",{"range":"154","text":"155"},"Update the dependencies array to be: [albumId, image]",{"range":"156","text":"157"},"Update the dependencies array to be: [error, isSuccess, navigate]",{"range":"158","text":"159"},"Update the dependencies array to be: [navigate, selectedError, selectedSuccess]",{"range":"160","text":"161"},"Update the dependencies array to be: [images, owner, title]",{"range":"162","text":"163"},[663,665],"[currentUser.uid]",[799,806],"[albumId, image]",[993,1011],"[error, isSuccess, navigate]",[1076,1108],"[navigate, selectedError, selectedSuccess]",[778,786],"[images, owner, title]"]